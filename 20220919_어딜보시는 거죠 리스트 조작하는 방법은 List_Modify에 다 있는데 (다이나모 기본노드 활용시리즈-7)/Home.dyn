{
  "Uuid": "3d707adc-ff47-480f-a4a9-eb1ae618ace2",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Home",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "2417b7eed01b4330a22ac6699daa72c8",
      "Inputs": [
        {
          "Id": "6d2a1e00d3e84bf28d92cb84ae79887c",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb07757fa8fd4671b23850560d1b46d8",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "887179fdba5648ff826700bd085197ce",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "aaa7a6773c78468b92677e50ce17d853",
      "Inputs": [
        {
          "Id": "96fd8c96a7eb4feab0f4ba1d26293704",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88cb3f15937442dbb4b872c935f4bcca",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88e463c877e54ef398c82bd0344c3004",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "7b0bac8ea0994843af3f2d9aa38284a8",
      "Inputs": [
        {
          "Id": "0e54ab4611dc4b84b7970156a9c9e7d7",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9709b83a00974f968059558401040068",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a77575d07a4a4d92a6668787909e23da",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "2f61e89f72284fe1941995e8aaee62ad",
      "Inputs": [
        {
          "Id": "f134279aac3e4602bc3443d9b6cf8927",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b882eb829aa4648a63d69580950142c",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5645e81e00824d178bd804d986bab32f",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "44814cad1d6843d7a566c8d6568483e8",
      "Inputs": [
        {
          "Id": "cdcc20c21bdf484cb1f2df8f25a8b83b",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d69908a7f724a9a91df3953e362315c",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8d1b11689484f8a876a580eab2812f0",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropEveryNthItem@var[]..[],int,int",
      "Id": "69228d3ae40f49e190d166af46507db3",
      "Inputs": [
        {
          "Id": "100bac8792274d2d9621dd210f30efdf",
          "Name": "list",
          "Description": "List to remove items from/\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f394088280cc4d00838ffe8e666a999e",
          "Name": "n",
          "Description": "Indices that are multiples of this argument will be removed.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2a19ffe69f146628376186580172fa1",
          "Name": "offset",
          "Description": "Amount of items to be ignored from the start of the list.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e01006bc2e054de3aecec19ec8cbf238",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes items from the given list at indices that are multiples of the given value, after the given offset.\n\nList.DropEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "2ec59b5d38034bb2842262acfc8d5c41",
      "Inputs": [
        {
          "Id": "f6c03ca4e6c24ab5b3840aef0fd99bfe",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff32fabf0dcc446583f7dee34b95ed90",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db23e5b9294546599e672139f422ba7f",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Filter, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a02ccc7ef8804414befdca3a8adfd54a",
      "Inputs": [
        {
          "Id": "e011ef761dfe4abfb756f372ea1c6bdc",
          "Name": "list",
          "Description": "List to filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a231836898774c649b5d172d24d323a7",
          "Name": "condition",
          "Description": "Filter function used to determine if an element is filtered in or out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bd6f924b6bf42ada3ab437dfae978d4",
          "Name": "in",
          "Description": "List containing all elements \"x\" where condition(x) = True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34f7cb81b1ad4fcd9534fde960f8b45c",
          "Name": "out",
          "Description": "List containing all elements \"x\" where condition(x) = False",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Filters a sequence by a given condition such that for an arbitrary element \"x,\" condition(x) = True or False."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "c6153265a167457f938cff205a639a6c",
      "Inputs": [
        {
          "Id": "eb8ea7ba59d6444693e46d7fc8430fc7",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c597ff4729f7493ea9b8bbf3ebbac3ae",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c86dfa74ada4882aff1e560c919910e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d976a5c215c14949bf1ab01e70f33a1c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a6a47250f83a4505a9b4a8982352a6d1",
      "Inputs": [
        {
          "Id": "bfe6e57ad6f44d1d86e4dbcd4a184fad",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d87975709b04e0f9d4a012b6e5fd5d0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ad3928300f149c39c42b7a4a65c3973",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Insert@var[]..[],var[]..[],int",
      "Id": "ec5f3258e91741c69a034842470a96e1",
      "Inputs": [
        {
          "Id": "ac8076ca5d594f109e31ab5d6ded16a1",
          "Name": "list",
          "Description": "The list the element will be inserted to\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7860884d5abe40bd82b42dfd39e14c6c",
          "Name": "element",
          "Description": "The element to be inserted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eeb72c3c7664a068f5cb3242df122da",
          "Name": "index",
          "Description": "Specifies the location in the list of the element to be inserted\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b330b9ac6e6b4bb9be57b9584b088c2e",
          "Name": "list",
          "Description": "List with the element inserted",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Inserts an element into a list at specified index.\n\nList.Insert (list: var[]..[], element: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Reduce, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "de0e62243e794d759efc5d13c4115d4c",
      "Inputs": [
        {
          "Id": "fdb6f490a70d42c4a2e712c3ee73ea8d",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baa311c6a525464ca5b6214be52607e2",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3da82bed8acf4b2a8c483d0dae6e2dc6",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff978068170d4c0b98442da9d29c6b5d",
          "Name": "list",
          "Description": "Reduced lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.RemoveIfNot@var[]..[],string",
      "Id": "71fe347751f7496f9a85f507e14954e9",
      "Inputs": [
        {
          "Id": "34ff6ca0ef99472bab4c32cbc303221d",
          "Name": "list",
          "Description": "List to remove items from\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bddad1ad25a4357b32ee6271cccd29d",
          "Name": "type",
          "Description": "Type of element\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f09e09493e94d379a3ac01ab5dc9902",
          "Name": "list",
          "Description": "List with everything removed except a specified type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the members of the list which are not members of the specified type.\n\nList.RemoveIfNot (list: var[]..[], type: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "990e83656bac4ffcab05a83b42d22bfb",
      "Inputs": [
        {
          "Id": "5258f5cf445d4c1384afeb5a9e8cf2ef",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "395b4bd51d184d90bac3c06c2e51094b",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35d76be1a8ab4efd8070962023dd48e7",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "52d064b92bd04ccda4fdcc9a0cd0cbe3",
      "Inputs": [
        {
          "Id": "4b5ed2487527440fad78fb89b06a63b0",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44b18d1441de4b95bc5c136d0ef17fd0",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69bb3d3eb45f499f881e2cbc3c60fce8",
          "Name": "condition",
          "Description": "Replacement function used to determine if an object should be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d499f614fc6d41e0b199fdee6aefffa8",
          "Name": "var[]..[]",
          "Description": "Item, or list of items where condition was used to replace with item given in \"replaceWith\"",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ReplaceItemAtIndex@var[]..[],int,var[]..[]",
      "Id": "eb554ac651934dd191237cf87d7414a6",
      "Inputs": [
        {
          "Id": "ea125c7bdf2749ba955c38d38382a599",
          "Name": "list",
          "Description": "List to replace an item in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e99ef765d9c4d9daaacbb9b9de49d76",
          "Name": "index",
          "Description": "Index of the item to be replaced.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d262f3bcc49413c9eb8f2c51058474c",
          "Name": "item",
          "Description": "The item to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da80b50f367449b4af88b4fb954a690a",
          "Name": "list",
          "Description": "A new list with the item replaced.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replace an item from the given list that's located at the specified index.\n\nList.ReplaceItemAtIndex (list: var[]..[], index: int, item: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "eaa898ab868946acb6b4d39f050d76bb",
      "Inputs": [
        {
          "Id": "6385da22404a4836b77788104345d5c9",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45a44c8a36eb4f2da6e4cc6ec41e8c33",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7b21bdd542c949b5b5f377b3364b9eea",
      "Inputs": [
        {
          "Id": "1692777215984001a151f727773c65a9",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0402c616356c4a85b1698047dd8dd55c",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "497f3ec16ad242a08eaefb1a272184d3",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82e54278f0354008827a505db53fd4c8",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Id": "cd630ae3964c402dbc286f8413c7e40d",
      "Inputs": [
        {
          "Id": "5b0b4d38f36048b28b853a3e3f155164",
          "Name": "list",
          "Description": "List to take a slice of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dcf31f4937a498dbd571e8561f8a4bd",
          "Name": "start",
          "Description": "Index to start the slice from.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "922d970bbe5a4625b8e5a7b40dfc2b2e",
          "Name": "end",
          "Description": "Index to end the slice at.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8f5763be6fc4c42ac12b5aa2dbbf296",
          "Name": "step",
          "Description": "Amount the indices of the items are separate by in the original list.\n\nint\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dda0debe7c59464abab13c20f47de0c1",
          "Name": "items",
          "Description": "Items in the slice of the given list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a single sub-list from the given list, based on starting index, ending index, and a step amount.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sublists@var[]..[],var[]..[],int",
      "Id": "ef2fc3125c0140faafd988cf0e987e4a",
      "Inputs": [
        {
          "Id": "2d7322de28d64f7d9cc9e2f365bfce40",
          "Name": "list",
          "Description": "The list from which to create sublists.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e960c8585bd3475c935290103b491845",
          "Name": "ranges",
          "Description": "The index ranges of the sublist elements. Ex. \\\"{0..3,5,2}\\\"\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a361d9a4b4cd4b6fb95381b05648ad34",
          "Name": "offset",
          "Description": "The offset to apply to the sublist. Ex. the range \\\"0..3\\\" with an offset of 2 will yield {0,1,2,3}{2,3,4,5}{4,5,6,7}...\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf06a620bc4f4c1d8d71dced2bebd68f",
          "Name": "lists",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Build sublists from a list using DesignScript range syntax.\n\nList.Sublists (list: var[]..[], ranges: var[]..[], offset: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
      "Id": "326525545c704c4caf11c8f09ed4a206",
      "Inputs": [
        {
          "Id": "75c5869b57e14fe1ac743e0258855e0a",
          "Name": "list",
          "Description": "List to take items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9604399f21444998ac3c21ba3b6b9aa9",
          "Name": "n",
          "Description": "Indices that are multiples of this number (after the offset) will be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28b91d8754bc4cc5b98b00da5bdabb01",
          "Name": "offset",
          "Description": "Amount of items to be ignored from the start of the list.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72b2571d77e54311a631b2c1e5c38389",
          "Name": "items",
          "Description": "Items from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\n\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "f6745d10b9c6422080f6f7266e2e5d43",
      "Inputs": [
        {
          "Id": "fbee4702cf19479eab327131d2b7174b",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "feefb99998724d7188fd9636613e1f30",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b7c92e40fe6496dbe6dbf4231774079",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 571,
      "SelectedString": "OST_StructuralColumns",
      "NodeType": "ExtensionNode",
      "Id": "73c9eb6b46d2406eaee07d6218ee11ce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f3c86c93a3b4f1cb9aca247d265723b",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "129b4a34cab5466cb13d1acb64342df3",
      "Inputs": [
        {
          "Id": "f65ffc61658b49318b1be1c813d6a2c4",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e876f1d792a403cbbf0336897f39548",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d4d3db05a6524bba9749510f8f310746",
      "Inputs": [
        {
          "Id": "1d8eac992102499c8f12db391cbdd89d",
          "Name": "Family Type",
          "Description": "The Family Type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ba5488a84444ec3a969c8cc18d2a1d5",
          "Name": "Elements",
          "Description": "The list of elements matching the query.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified family type from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 286,
      "SelectedString": "Pendant Light - Linear - 1 Lamp:2440mm - 277V",
      "NodeType": "ExtensionNode",
      "Id": "6a39aa608156429a8d3186240c637944",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f60aae403e444d3689672b55c56244cb",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "72f920f957dd43b78e320eae0d29004b",
      "Inputs": [
        {
          "Id": "3fd9d5a1971e4ed39cefeb43b4171019",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffe3b66ad7054d90b00273caaadf1c9c",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "9e0dbe34924249a09415d326ca8e21cc",
      "Inputs": [
        {
          "Id": "a4c37bf23c474fc49795407a3b476a92",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05cf593f240c447c86f357353da02982",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd559d6b0e4c489fb6a0baed1e5933c3",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "43af0b4042684d18b5202e89a0d497b6",
      "Inputs": [
        {
          "Id": "611f6efbd4c34e9986c32a3068380747",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3a891e7927b4eaf8b789885f146291e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "4e3b2c80ce1946fa9dd5f5e35096ce35",
      "Inputs": [
        {
          "Id": "10c3336f168b44b98222f366d362c4b3",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bb9dbc2860f42ffa1d34577572257cc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "8be8ba3e186b418b8cecadf40029bdab",
      "Inputs": [
        {
          "Id": "8b7e34773bdb4eae9c4d85a4558ce959",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c144b26cc0fa4803800ea03ea32594e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "be715923cbd245b18c451bba041a83da",
      "Inputs": [
        {
          "Id": "7b9f9fe5ef2a4d89a23b8398da927f13",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04ab1f1e09b9415db4b704e63eec4faa",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "5184f9ae79724124a3b772d27ee2f9a6",
      "Inputs": [
        {
          "Id": "ee38a96902104ff1ac94512227615d7f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df7a88f548264745975985d69db4f088",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "1f3c86c93a3b4f1cb9aca247d265723b",
      "End": "f65ffc61658b49318b1be1c813d6a2c4",
      "Id": "fe64fc97b9e64da5b9f4ce4ca7590f7e"
    },
    {
      "Start": "5ba5488a84444ec3a969c8cc18d2a1d5",
      "End": "3fd9d5a1971e4ed39cefeb43b4171019",
      "Id": "d4f33c4de1b44e92981e53ab6ad79287"
    },
    {
      "Start": "5ba5488a84444ec3a969c8cc18d2a1d5",
      "End": "8b7e34773bdb4eae9c4d85a4558ce959",
      "Id": "9e3381720ac64b07835e551259644bfa"
    },
    {
      "Start": "f60aae403e444d3689672b55c56244cb",
      "End": "1d8eac992102499c8f12db391cbdd89d",
      "Id": "cd588d9bb82b4b8d9fae779044062016"
    },
    {
      "Start": "ffe3b66ad7054d90b00273caaadf1c9c",
      "End": "a4c37bf23c474fc49795407a3b476a92",
      "Id": "b885b953577147799a2f7db4e3f98bd6"
    },
    {
      "Start": "05cf593f240c447c86f357353da02982",
      "End": "611f6efbd4c34e9986c32a3068380747",
      "Id": "b92d607bf08a4b288f889d2352305ff7"
    },
    {
      "Start": "bd559d6b0e4c489fb6a0baed1e5933c3",
      "End": "10c3336f168b44b98222f366d362c4b3",
      "Id": "60ae57b10bcd4a32a151fbb89ef83c36"
    },
    {
      "Start": "c144b26cc0fa4803800ea03ea32594e2",
      "End": "7b9f9fe5ef2a4d89a23b8398da927f13",
      "Id": "958289da9c0449398e93c44a49744993"
    },
    {
      "Start": "04ab1f1e09b9415db4b704e63eec4faa",
      "End": "ee38a96902104ff1ac94512227615d7f",
      "Id": "2152fcca01d94d859c0cf88035b1bfb1"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -3354.5693359375,
      "EyeY": 12227.2138671875,
      "EyeZ": 16714.515625,
      "LookX": 6956.6982421875,
      "LookY": -9748.1748046875,
      "LookZ": -15855.736328125,
      "UpX": 0.1174684464931488,
      "UpY": 0.95630478858947754,
      "UpZ": -0.26773566007614136
    },
    "NodeViews": [
      {
        "Id": "2417b7eed01b4330a22ac6699daa72c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1021.0479142582311,
        "Y": 33.883777367914831
      },
      {
        "Id": "aaa7a6773c78468b92677e50ce17d853",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1018.0479142582311,
        "Y": 159.88377736791483
      },
      {
        "Id": "7b0bac8ea0994843af3f2d9aa38284a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -402.40453330038758,
        "Y": -24.704254436668805
      },
      {
        "Id": "2f61e89f72284fe1941995e8aaee62ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -736.49101635235684,
        "Y": -164.24974187456428
      },
      {
        "Id": "44814cad1d6843d7a566c8d6568483e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -397.40453330038758,
        "Y": 132.2957455633312
      },
      {
        "Id": "69228d3ae40f49e190d166af46507db3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.DropEveryNthItem",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -714.71607117283372,
        "Y": 494.46487586398291
      },
      {
        "Id": "2ec59b5d38034bb2842262acfc8d5c41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -725.66707996152377,
        "Y": -36.601869092898653
      },
      {
        "Id": "a02ccc7ef8804414befdca3a8adfd54a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Filter",
        "ShowGeometry": true,
        "Excluded": true,
        "X": -102.20615858511837,
        "Y": -1.027920004792179
      },
      {
        "Id": "c6153265a167457f938cff205a639a6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -101.6146674584561,
        "Y": 131.32420721354225
      },
      {
        "Id": "a6a47250f83a4505a9b4a8982352a6d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -402.34469232330548,
        "Y": 282.53165014958034
      },
      {
        "Id": "ec5f3258e91741c69a034842470a96e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Insert",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1025.0479142582312,
        "Y": 290.88377736791483
      },
      {
        "Id": "de0e62243e794d759efc5d13c4115d4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Reduce",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 433.22406402050296,
        "Y": 75.956468957688173
      },
      {
        "Id": "71fe347751f7496f9a85f507e14954e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveIfNot",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -706.84512150455043,
        "Y": 104.04801186786526
      },
      {
        "Id": "990e83656bac4ffcab05a83b42d22bfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -712.15916776782456,
        "Y": 225.88085033584898
      },
      {
        "Id": "52d064b92bd04ccda4fdcc9a0cd0cbe3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 166.40605409906857,
        "Y": 71.567744005557273
      },
      {
        "Id": "eb554ac651934dd191237cf87d7414a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.ReplaceItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 173.09546899091833,
        "Y": 269.79622606982963
      },
      {
        "Id": "eaa898ab868946acb6b4d39f050d76bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.RestOfItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -709.22482339822091,
        "Y": 378.81929058018
      },
      {
        "Id": "7b21bdd542c949b5b5f377b3364b9eea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 436.19735778904897,
        "Y": 255.99801198439434
      },
      {
        "Id": "cd630ae3964c402dbc286f8413c7e40d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Slice",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -718.5311064030376,
        "Y": 652.942125958509
      },
      {
        "Id": "ef2fc3125c0140faafd988cf0e987e4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sublists",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -405.94706437750108,
        "Y": 428.79429579513408
      },
      {
        "Id": "326525545c704c4caf11c8f09ed4a206",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.TakeEveryNthItem",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -109.16337820820388,
        "Y": 257.46636135046879
      },
      {
        "Id": "f6745d10b9c6422080f6f7266e2e5d43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.TakeItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -109.03813864145809,
        "Y": 430.43147415459589
      },
      {
        "Id": "73c9eb6b46d2406eaee07d6218ee11ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Categories",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3209.8045724591452,
        "Y": -815.40305320827542
      },
      {
        "Id": "129b4a34cab5466cb13d1acb64342df3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2988.3354166187532,
        "Y": -818.2303190275145
      },
      {
        "Id": "d4d3db05a6524bba9749510f8f310746",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "All Elements of Family Type",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2587.2336756198788,
        "Y": 19.876173224650415
      },
      {
        "Id": "6a39aa608156429a8d3186240c637944",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Family Types",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3035.8630158660012,
        "Y": 28.974312671252051
      },
      {
        "Id": "72f920f957dd43b78e320eae0d29004b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -2299.0826723088167,
        "Y": 13.73778056338756
      },
      {
        "Id": "9e0dbe34924249a09415d326ca8e21cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Deconstruct",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -1947.7369031294247,
        "Y": -2.4719631873594494
      },
      {
        "Id": "43af0b4042684d18b5202e89a0d497b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -1639.9430603859555,
        "Y": -244.48691141307992
      },
      {
        "Id": "4e3b2c80ce1946fa9dd5f5e35096ce35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -1638.7383195933783,
        "Y": 131.57470940929744
      },
      {
        "Id": "8be8ba3e186b418b8cecadf40029bdab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2452.0,
        "Y": -89.0
      },
      {
        "Id": "be715923cbd245b18c451bba041a83da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Geometry",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2251.7485240171795,
        "Y": -232.17127357603528
      },
      {
        "Id": "5184f9ae79724124a3b772d27ee2f9a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2001.0,
        "Y": -298.0
      }
    ],
    "Annotations": [
      {
        "Id": "8b080cf9a8cb455b8e7cf1e6661cdbcf",
        "Title": "항목 추가",
        "Nodes": [
          "2417b7eed01b4330a22ac6699daa72c8",
          "aaa7a6773c78468b92677e50ce17d853",
          "ec5f3258e91741c69a034842470a96e1"
        ],
        "Left": -1035.0479142582312,
        "Top": -19.116222632085169,
        "Width": 206.0,
        "Height": 455.0,
        "FontSize": 36.0,
        "InitialTop": 33.883777367914831,
        "InitialHeight": 402.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "933a759eee8d4e20bf2d868ff878a85f",
        "Title": "구조 변경",
        "Nodes": [
          "7b0bac8ea0994843af3f2d9aa38284a8",
          "44814cad1d6843d7a566c8d6568483e8",
          "a6a47250f83a4505a9b4a8982352a6d1",
          "ef2fc3125c0140faafd988cf0e987e4a"
        ],
        "Left": -415.94706437750108,
        "Top": -77.7042544366688,
        "Width": 210.54253107711349,
        "Height": 651.49855023180294,
        "FontSize": 36.0,
        "InitialTop": -24.704254436668805,
        "InitialHeight": 598.49855023180294,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6dc0299a92d6487a8495de4cd1da51e0",
        "Title": "항목 제거",
        "Nodes": [
          "2f61e89f72284fe1941995e8aaee62ad",
          "69228d3ae40f49e190d166af46507db3",
          "2ec59b5d38034bb2842262acfc8d5c41",
          "71fe347751f7496f9a85f507e14954e9",
          "990e83656bac4ffcab05a83b42d22bfb",
          "eaa898ab868946acb6b4d39f050d76bb",
          "cd630ae3964c402dbc286f8413c7e40d"
        ],
        "Left": -746.49101635235684,
        "Top": -217.24974187456428,
        "Width": 244.0,
        "Height": 1041.1918678330733,
        "FontSize": 36.0,
        "InitialTop": -164.24974187456428,
        "InitialHeight": 962.19186783307327,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1636673d9260491ab4c88379fad815d4",
        "Title": "필터링, 추출",
        "Nodes": [
          "a02ccc7ef8804414befdca3a8adfd54a",
          "c6153265a167457f938cff205a639a6c",
          "326525545c704c4caf11c8f09ed4a206",
          "f6745d10b9c6422080f6f7266e2e5d43"
        ],
        "Left": -119.16337820820388,
        "Top": -54.027920004792179,
        "Width": 204.12523956674579,
        "Height": 603.459394159388,
        "FontSize": 36.0,
        "InitialTop": -1.027920004792179,
        "InitialHeight": 576.459394159388,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d7caf65e49d94fb6a42ec0bb92b076fd",
        "Title": "항목 치환",
        "Nodes": [
          "52d064b92bd04ccda4fdcc9a0cd0cbe3",
          "eb554ac651934dd191237cf87d7414a6"
        ],
        "Left": 156.40605409906857,
        "Top": 18.567744005557273,
        "Width": 199.0,
        "Height": 396.22848206427238,
        "FontSize": 36.0,
        "InitialTop": 71.567744005557273,
        "InitialHeight": 343.22848206427238,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8878415d858e40cea3f509d1a64c9791",
        "Title": "축약",
        "Nodes": [
          "de0e62243e794d759efc5d13c4115d4c",
          "7b21bdd542c949b5b5f377b3364b9eea"
        ],
        "Left": 423.22406402050296,
        "Top": 22.956468957688173,
        "Width": 202.973293768546,
        "Height": 378.04154302670617,
        "FontSize": 36.0,
        "InitialTop": 75.956468957688173,
        "InitialHeight": 325.04154302670617,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 2341.6640458990714,
    "Y": 433.58615501935162,
    "Zoom": 0.85435980341323714
  }
}